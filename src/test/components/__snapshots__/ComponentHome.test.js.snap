// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Component Home Should match snapshot 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Connect(ComponentHome)
    store={
      Object {
        "dispatch": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "runSaga": Object {
          "@@redux-saga/TASK": true,
          "cancel": [Function],
          "cont": undefined,
          "done": Promise {},
          "error": [Function],
          "id": 1,
          "isAborted": [Function],
          "isCancelled": [Function],
          "isRunning": [Function],
          "joiners": Array [],
          "name": "root",
          "result": [Function],
          "setContext": [Function],
        },
        "subscribe": [Function],
        Symbol(observable): [Function],
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "dispatch": [Function],
      "favorites": Array [],
      "gifs": Array [],
      "loading": true,
      "store": Object {
        "dispatch": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "runSaga": Object {
          "@@redux-saga/TASK": true,
          "cancel": [Function],
          "cont": undefined,
          "done": Promise {},
          "error": [Function],
          "id": 1,
          "isAborted": [Function],
          "isCancelled": [Function],
          "isRunning": [Function],
          "joiners": Array [],
          "name": "root",
          "result": [Function],
          "setContext": [Function],
        },
        "subscribe": [Function],
        Symbol(observable): [Function],
      },
      "storeSubscription": Subscription {
        "listeners": Object {
          "clear": [Function],
          "get": [Function],
          "notify": [Function],
          "subscribe": [Function],
        },
        "onStateChange": [Function],
        "parentSub": undefined,
        "store": Object {
          "dispatch": [Function],
          "getState": [Function],
          "replaceReducer": [Function],
          "runSaga": Object {
            "@@redux-saga/TASK": true,
            "cancel": [Function],
            "cont": undefined,
            "done": Promise {},
            "error": [Function],
            "id": 1,
            "isAborted": [Function],
            "isCancelled": [Function],
            "isRunning": [Function],
            "joiners": Array [],
            "name": "root",
            "result": [Function],
            "setContext": [Function],
          },
          "subscribe": [Function],
          Symbol(observable): [Function],
        },
        "unsubscribe": [Function],
      },
    },
    "ref": null,
    "rendered": null,
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "dispatch": [Function],
        "favorites": Array [],
        "gifs": Array [],
        "loading": true,
        "store": Object {
          "dispatch": [Function],
          "getState": [Function],
          "replaceReducer": [Function],
          "runSaga": Object {
            "@@redux-saga/TASK": true,
            "cancel": [Function],
            "cont": undefined,
            "done": Promise {},
            "error": [Function],
            "id": 1,
            "isAborted": [Function],
            "isCancelled": [Function],
            "isRunning": [Function],
            "joiners": Array [],
            "name": "root",
            "result": [Function],
            "setContext": [Function],
          },
          "subscribe": [Function],
          Symbol(observable): [Function],
        },
        "storeSubscription": Subscription {
          "listeners": Object {
            "clear": [Function],
            "get": [Function],
            "notify": [Function],
            "subscribe": [Function],
          },
          "onStateChange": [Function],
          "parentSub": undefined,
          "store": Object {
            "dispatch": [Function],
            "getState": [Function],
            "replaceReducer": [Function],
            "runSaga": Object {
              "@@redux-saga/TASK": true,
              "cancel": [Function],
              "cont": undefined,
              "done": Promise {},
              "error": [Function],
              "id": 1,
              "isAborted": [Function],
              "isCancelled": [Function],
              "isRunning": [Function],
              "joiners": Array [],
              "name": "root",
              "result": [Function],
              "setContext": [Function],
            },
            "subscribe": [Function],
            Symbol(observable): [Function],
          },
          "unsubscribe": [Function],
        },
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
