// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`App should match snapshot 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <App />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": <div
        className="app"
>
        <styled.header>
                <styled.div>
                        <ul>
                                <styled.div>
                                        <Route
                                                path="/Home"
                                        >
                                                [Function]
                                        </Route>
                                </styled.div>
                                <styled.div>
                                        <Route
                                                path="/Favorites"
                                        >
                                                [Function]
                                        </Route>
                                </styled.div>
                        </ul>
                </styled.div>
        </styled.header>
        <styled.div>
                <ErrorBoundary>
                        <Switch>
                                <Route
                                        component={[Function]}
                                        path="/Home"
                                />
                                <Route
                                        component={[Function]}
                                        path="/Favorites"
                                />
                                <Redirect
                                        push={false}
                                        to={
                                                Object {
                                                        "pathname": "/Home",
                                                      }
                                        }
                                />
                        </Switch>
                </ErrorBoundary>
        </styled.div>
</div>,
      "store": Object {
        "dispatch": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "runSaga": Object {
          "@@redux-saga/TASK": true,
          "cancel": [Function],
          "cont": undefined,
          "done": Promise {},
          "error": [Function],
          "id": 1,
          "isAborted": [Function],
          "isCancelled": [Function],
          "isRunning": [Function],
          "joiners": Array [],
          "name": "root",
          "result": [Function],
          "setContext": [Function],
        },
        "subscribe": [Function],
        Symbol(observable): [Function],
      },
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <styled.header>
            <styled.div>
                        <ul>
                                    <styled.div>
                                                <Route
                                                            path="/Home"
                                                >
                                                            [Function]
                                                </Route>
                                    </styled.div>
                                    <styled.div>
                                                <Route
                                                            path="/Favorites"
                                                >
                                                            [Function]
                                                </Route>
                                    </styled.div>
                        </ul>
            </styled.div>
</styled.header>,
          <styled.div>
            <ErrorBoundary>
                        <Switch>
                                    <Route
                                                component={[Function]}
                                                path="/Home"
                                    />
                                    <Route
                                                component={[Function]}
                                                path="/Favorites"
                                    />
                                    <Redirect
                                                push={false}
                                                to={
                                                            Object {
                                                                        "pathname": "/Home",
                                                                      }
                                                }
                                    />
                        </Switch>
            </ErrorBoundary>
</styled.div>,
        ],
        "className": "app",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <styled.div>
              <ul>
                            <styled.div>
                                          <Route
                                                        path="/Home"
                                          >
                                                        [Function]
                                          </Route>
                            </styled.div>
                            <styled.div>
                                          <Route
                                                        path="/Favorites"
                                          >
                                                        [Function]
                                          </Route>
                            </styled.div>
              </ul>
</styled.div>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <ul>
                <styled.div>
                                <Route
                                                path="/Home"
                                >
                                                [Function]
                                </Route>
                </styled.div>
                <styled.div>
                                <Route
                                                path="/Favorites"
                                >
                                                [Function]
                                </Route>
                </styled.div>
</ul>,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <styled.div>
                    <Route
                                        path="/Home"
                    >
                                        [Function]
                    </Route>
</styled.div>,
                  <styled.div>
                    <Route
                                        path="/Favorites"
                    >
                                        [Function]
                    </Route>
</styled.div>,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": <Route
                      path="/Home"
>
                      [Function]
</Route>,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": [Function],
                      "path": "/Home",
                    },
                    "ref": null,
                    "rendered": [Function],
                    "type": [Function],
                  },
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": <Route
                      path="/Favorites"
>
                      [Function]
</Route>,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": [Function],
                      "path": "/Favorites",
                    },
                    "ref": null,
                    "rendered": [Function],
                    "type": [Function],
                  },
                  "type": [Function],
                },
              ],
              "type": "ul",
            },
            "type": [Function],
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <ErrorBoundary>
              <Switch>
                            <Route
                                          component={[Function]}
                                          path="/Home"
                            />
                            <Route
                                          component={[Function]}
                                          path="/Favorites"
                            />
                            <Redirect
                                          push={false}
                                          to={
                                                        Object {
                                                                      "pathname": "/Home",
                                                                    }
                                          }
                            />
              </Switch>
</ErrorBoundary>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <Switch>
                <Route
                                component={[Function]}
                                path="/Home"
                />
                <Route
                                component={[Function]}
                                path="/Favorites"
                />
                <Redirect
                                push={false}
                                to={
                                                Object {
                                                                "pathname": "/Home",
                                                              }
                                }
                />
</Switch>,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": Array [
                  <Route
                    component={[Function]}
                    path="/Home"
/>,
                  <Route
                    component={[Function]}
                    path="/Favorites"
/>,
                  <Redirect
                    push={false}
                    to={
                                        Object {
                                                            "pathname": "/Home",
                                                          }
                    }
/>,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "component": [Function],
                    "path": "/Home",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "component": [Function],
                    "path": "/Favorites",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "push": false,
                    "to": Object {
                      "pathname": "/Home",
                    },
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
            "type": [Function],
          },
          "type": [Function],
        },
      ],
      "type": "div",
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <div
          className="app"
>
          <styled.header>
                    <styled.div>
                              <ul>
                                        <styled.div>
                                                  <Route
                                                            path="/Home"
                                                  >
                                                            [Function]
                                                  </Route>
                                        </styled.div>
                                        <styled.div>
                                                  <Route
                                                            path="/Favorites"
                                                  >
                                                            [Function]
                                                  </Route>
                                        </styled.div>
                              </ul>
                    </styled.div>
          </styled.header>
          <styled.div>
                    <ErrorBoundary>
                              <Switch>
                                        <Route
                                                  component={[Function]}
                                                  path="/Home"
                                        />
                                        <Route
                                                  component={[Function]}
                                                  path="/Favorites"
                                        />
                                        <Redirect
                                                  push={false}
                                                  to={
                                                            Object {
                                                                      "pathname": "/Home",
                                                                    }
                                                  }
                                        />
                              </Switch>
                    </ErrorBoundary>
          </styled.div>
</div>,
        "store": Object {
          "dispatch": [Function],
          "getState": [Function],
          "replaceReducer": [Function],
          "runSaga": Object {
            "@@redux-saga/TASK": true,
            "cancel": [Function],
            "cont": undefined,
            "done": Promise {},
            "error": [Function],
            "id": 1,
            "isAborted": [Function],
            "isCancelled": [Function],
            "isRunning": [Function],
            "joiners": Array [],
            "name": "root",
            "result": [Function],
            "setContext": [Function],
          },
          "subscribe": [Function],
          Symbol(observable): [Function],
        },
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <styled.header>
              <styled.div>
                            <ul>
                                          <styled.div>
                                                        <Route
                                                                      path="/Home"
                                                        >
                                                                      [Function]
                                                        </Route>
                                          </styled.div>
                                          <styled.div>
                                                        <Route
                                                                      path="/Favorites"
                                                        >
                                                                      [Function]
                                                        </Route>
                                          </styled.div>
                            </ul>
              </styled.div>
</styled.header>,
            <styled.div>
              <ErrorBoundary>
                            <Switch>
                                          <Route
                                                        component={[Function]}
                                                        path="/Home"
                                          />
                                          <Route
                                                        component={[Function]}
                                                        path="/Favorites"
                                          />
                                          <Redirect
                                                        push={false}
                                                        to={
                                                                      Object {
                                                                                    "pathname": "/Home",
                                                                                  }
                                                        }
                                          />
                            </Switch>
              </ErrorBoundary>
</styled.div>,
          ],
          "className": "app",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <styled.div>
                <ul>
                                <styled.div>
                                                <Route
                                                                path="/Home"
                                                >
                                                                [Function]
                                                </Route>
                                </styled.div>
                                <styled.div>
                                                <Route
                                                                path="/Favorites"
                                                >
                                                                [Function]
                                                </Route>
                                </styled.div>
                </ul>
</styled.div>,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <ul>
                  <styled.div>
                                    <Route
                                                      path="/Home"
                                    >
                                                      [Function]
                                    </Route>
                  </styled.div>
                  <styled.div>
                                    <Route
                                                      path="/Favorites"
                                    >
                                                      [Function]
                                    </Route>
                  </styled.div>
</ul>,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <styled.div>
                      <Route
                                            path="/Home"
                      >
                                            [Function]
                      </Route>
</styled.div>,
                    <styled.div>
                      <Route
                                            path="/Favorites"
                      >
                                            [Function]
                      </Route>
</styled.div>,
                  ],
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": <Route
                        path="/Home"
>
                        [Function]
</Route>,
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "children": [Function],
                        "path": "/Home",
                      },
                      "ref": null,
                      "rendered": [Function],
                      "type": [Function],
                    },
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": <Route
                        path="/Favorites"
>
                        [Function]
</Route>,
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "children": [Function],
                        "path": "/Favorites",
                      },
                      "ref": null,
                      "rendered": [Function],
                      "type": [Function],
                    },
                    "type": [Function],
                  },
                ],
                "type": "ul",
              },
              "type": [Function],
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <ErrorBoundary>
                <Switch>
                                <Route
                                                component={[Function]}
                                                path="/Home"
                                />
                                <Route
                                                component={[Function]}
                                                path="/Favorites"
                                />
                                <Redirect
                                                push={false}
                                                to={
                                                                Object {
                                                                                "pathname": "/Home",
                                                                              }
                                                }
                                />
                </Switch>
</ErrorBoundary>,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <Switch>
                  <Route
                                    component={[Function]}
                                    path="/Home"
                  />
                  <Route
                                    component={[Function]}
                                    path="/Favorites"
                  />
                  <Redirect
                                    push={false}
                                    to={
                                                      Object {
                                                                        "pathname": "/Home",
                                                                      }
                                    }
                  />
</Switch>,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": Array [
                    <Route
                      component={[Function]}
                      path="/Home"
/>,
                    <Route
                      component={[Function]}
                      path="/Favorites"
/>,
                    <Redirect
                      push={false}
                      to={
                                            Object {
                                                                  "pathname": "/Home",
                                                                }
                      }
/>,
                  ],
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "component": [Function],
                      "path": "/Home",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "component": [Function],
                      "path": "/Favorites",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "push": false,
                      "to": Object {
                        "pathname": "/Home",
                      },
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                ],
                "type": [Function],
              },
              "type": [Function],
            },
            "type": [Function],
          },
        ],
        "type": "div",
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
